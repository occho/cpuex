## -*- coding: utf-8 -*-
<%inherit file="skeleton.tmp"/>

entity decode is
<%block name="entity">
port (
	CLK_DC	:	in	std_logic;
	PROM_OUT	:	in ${oc.ir_t()};
	FP_OUT	:	in ${oc.reg_t()};
	LINK_OUT	:	in ${oc.pc_t()};
	INPUT_FLAG	:	out ${oc.io_flag_t()};
	IR	: out ${oc.ir_t()};
	FP	:	out ${oc.ram_addr_t()};
	LR	:	out ${oc.pc_t()}
);
</%block>
end decode;

architecture RTL of decode is

	signal opcode : std_logic_vector(5 downto 0);
	signal funct  : std_logic_vector(5 downto 0);

begin
	opcode <= PROM_OUT(31 downto 26);
	funct  <= PROM_OUT(5 downto 0);
	process(CLK_DC)
	begin
		if rising_edge(CLK_DC) then
			IR <= PROM_OUT;
			FP <= FP_OUT(19 downto 0);
			LR <= LINK_OUT;

			if opcode="000001" and funct="000000" then -- I/O
				INPUT_FLAG <= '1';
			else
				INPUT_FLAG <= '0';
			end if;

		end if;
	end process;
end RTL;
<%namespace name="oc" file="macro.tmp"/>
